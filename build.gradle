import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java-library'
    id 'org.springframework.boot' version '3.5.4' apply false
    id 'io.spring.dependency-management' version '1.1.7'
    id 'maven-publish'
    id 'signing'
}

group = 'xyz.norbjert'
version = '0.0.7'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.register('javadocJar', Jar) {
    dependsOn 'javadoc'
    from javadoc.destinationDir
    archiveClassifier.set('javadoc')
}

tasks.register('sourcesJar', Jar) {
    dependsOn 'classes'
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

dependencyManagement {
    imports {
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}

publishing {
    publications {
        create('mavenJava', MavenPublication) {
            from components.java
            artifact javadocJar
            artifact sourcesJar

            pom {
                name = 'JDA4Spring'
                description = 'A spring boot integration for the JDA library'
                url = 'https://github.com/norbjert/JDA4Spring'

                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.html'
                    }
                }

                developers {
                    developer {
                        name = 'norbjert'
                        email = 'norbert88@protonmail.com'
                        organization = 'norbjert'
                        organizationUrl = 'https://www.norbjert.xyz'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/norbjert/JDA4Spring.git'
                    developerConnection = 'scm:git:ssh://github.com:norbjert/JDA4Spring.git'
                    url = 'https://github.com/norbjert/JDA4Spring/tree/master'
                }
            }
        }
    }
    repositories {
        maven {
            name = 'MavenCentral'
            url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = project.findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = project.findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    api 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //discord api
    implementation 'net.dv8tion:JDA:5.6.1'
}

tasks.named('test') {
    useJUnitPlatform()
}